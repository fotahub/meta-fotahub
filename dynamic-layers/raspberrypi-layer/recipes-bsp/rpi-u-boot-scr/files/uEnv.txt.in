boot_part=0:1
os_part=0:2

bootcmd_create_envfile=if test ! -e mmc $boot_part uboot.env; then \
        saveenv; \
    fi

bootcmd_load_ostree_env=load mmc $os_part $loadaddr /boot/loader/uEnv.txt; env import -t $loadaddr $filesize

bootcmd_stage_previous_os=if env exists bootargs2; then \
        setenv bootargs $bootargs2; \
        setenv kernel_image $kernel_image2; \
    else \
        echo "No previous OS version found - exiting boot script and returning to bootloader"; \
        saveenv; \
        exit; \
    fi

bootcmd_handle_os_update=if env exists applying_os_update; then \
        if test $os_update_reboot_failure_credit = 0; then \
            echo "Too many failed attempts to boot OS update - restoring previous OS version..."; \
            setenv applying_os_update; \
            setenv os_update_reboot_failure_credit; \
            setenv rolling_back_os_update 1; \
            run bootcmd_stage_previous_os; \
        else \
            echo "OS update applied - trying to boot it ($os_update_reboot_failure_credit attempts remaining)..."; \
            setexpr os_update_reboot_failure_credit $os_update_reboot_failure_credit - 1; \
        fi; \
        saveenv; \
    elif env exists rolling_back_os_update; then \
        echo "OS updated reverted - restoring previous OS version..."; \
        run bootcmd_stage_previous_os; \
        saveenv; \
    else \
        echo "No OS update in progress - booting normally..."; \
    fi

bootcmd_args=setenv bootargs "$bootargs $bootargs_fdt ostree_root=/dev/mmcblk0p2"

bootcmd_load_fit_conf=setexpr ostree_root gsub "^.*ostree=([^ ]*).*$" "\\\\1" "${bootargs}"; \
    if test -e mmc $os_part "${ostree_root}/usr/lib/fit_conf"; then \
        load mmc $os_part $loadaddr "${ostree_root}/usr/lib/fit_conf"; env import -t $loadaddr $filesize; \
    fi
bootcmd_load_fit_image=load mmc $os_part $ramdisk_addr_r "/boot"$kernel_image
bootcmd_load=run bootcmd_load_fit_conf; run bootcmd_load_fit_image

bootcmd_run=bootm "${ramdisk_addr_r}${fit_conf}"

bootcmd_boot=run bootcmd_args; run bootcmd_load; run bootcmd_run

bootcmd=echo "Entering FotaHub boot script..."; \
    run bootcmd_create_envfile; \
    run bootcmd_load_ostree_env; \
    run bootcmd_handle_os_update; \
    run bootcmd_boot
