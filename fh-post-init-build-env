#!/bin/bash

get_machine_layer_name()
{
  local MACHINE=$1

  case "${MACHINE}" in
  "raspberrypi3")
      echo "meta-raspberrypi"
      ;;
  "imx6qdlsabresd")
      echo "meta-freescale"
      ;;
  *)
      echo "todo-configure-machine-layer"
      ;;
  esac
}

show_usage()
{
  cat << EOF

Usage: $(basename $0) <machine>

EOF
}

main()
{
  if [ $# -lt 1 ]; then
    show_usage
    exit 1
  fi
  local MACHINE="$1"

  if [ ! -d "$YOCTO_BUILD_DIR/conf" ]; then
    echo "ERROR: The 'conf' directory does not yet exist. Run the 'oe-init-build-env' script first."
    exit 1
  fi

  # Finish up Yocto build configuration
  MACHINE_LAYER_NAME=$(get_machine_layer_name $MACHINE)
  sed -i "s@{{sources}}@$YOCTO_SOURCES_DIR@" "$YOCTO_BUILD_DIR/conf/bblayers.conf"
  sed -i "s@{{meta-machine}}@$MACHINE_LAYER_NAME@" "$YOCTO_BUILD_DIR/conf/bblayers.conf"
  sed -i "s@{{machine}}@$MACHINE@" "$YOCTO_BUILD_DIR/conf/local.conf"
  sed -i "s@{{downloads}}@$YOCTO_DATA_DIR/downloads@" "$YOCTO_BUILD_DIR/conf/local.conf"

  # Move newly generated Yocto build configuration files to project directory and sym-link them back to build directory;
  # replace re-generated Yocto build configuration files with sym-links to their counterparts in project directory otherwise
  if [ ! -f "$YOCTO_PROJECT_DIR/conf/bblayers.conf"  ]; then
    mkdir -p "$YOCTO_PROJECT_DIR/conf"
    mv "$YOCTO_BUILD_DIR/conf/bblayers.conf" "$YOCTO_PROJECT_DIR/conf"
  else
    rm "$YOCTO_BUILD_DIR/conf/bblayers.conf"
  fi
  ln -s "$YOCTO_PROJECT_DIR/conf/bblayers.conf" "$YOCTO_BUILD_DIR/conf/bblayers.conf"

  if [ ! -f "$YOCTO_PROJECT_DIR/conf/local.conf" ]; then
    mv "$YOCTO_BUILD_DIR/conf/local.conf" "$YOCTO_PROJECT_DIR/conf"
  else
    rm "$YOCTO_BUILD_DIR/conf/local.conf"
  fi
  ln -s "$YOCTO_PROJECT_DIR/conf/local.conf" "$YOCTO_BUILD_DIR/conf/local.conf"

  # Sym-link Yocto build script from project directory into build directory 
  # (for easy use in `bind.bat bash` or `./bind.sh bash` sessions)
  if [ -f "$YOCTO_PROJECT_DIR/build.sh" ] && [ ! -f "$YOCTO_BUILD_DIR/build.sh" ]; then
    ln -s "$YOCTO_PROJECT_DIR/build.sh" "$YOCTO_BUILD_DIR/build.sh"
  fi

  # Replace nonexistent sym-linked Full Metal Update server configuration with empty but existing fake configuration file
  rm $YOCTO_SOURCES_DIR/meta-fullmetalupdate/recipes-fullmetalupdate/fullmetalupdate/files/config.cfg
  touch $YOCTO_SOURCES_DIR/meta-fullmetalupdate/recipes-fullmetalupdate/fullmetalupdate/files/config.cfg
  
  # Activate suitable Full Metal Update layer configuration
  cp $YOCTO_SOURCES_DIR/meta-fullmetalupdate-extra/conf/$1/* $YOCTO_SOURCES_DIR/meta-fullmetalupdate-extra/conf
}

main $@
cd /build/yocto/build